:PROPERTIES:
:header-args:conf-space: :tangle config :padline yes
:END:

* Virtual Desktop
Use just one Desktop, with a size of 3x3 pages:
#+begin_src conf-space
  DesktopSize 3x3
#+end_src

Enable changing the viewport by hitting the edges with the mouse:
#+begin_src conf-space
  EdgeScroll 100 100
  EdgeThickness 1
#+end_src

* RandR Support

** (De-)Activation of (Dis-)connected monitors
After a monitor is connected, its status can be verifed by executing:
#+begin_src shell :results verbatim :wrap example
  xrandr | grep DP
#+end_src

It should result in something like:
#+begin_example
  eDP-1 connected primary 2048x1152+0+0 (normal left inverted right x axis y axis) 344mm x 194mm
  DP-1 connected (normal left inverted right x axis y axis)
  DP-2 disconnected (normal left inverted right x axis y axis)
  DP-3 disconnected (normal left inverted right x axis y axis)
  DP-4 disconnected (normal left inverted right x axis y axis)
#+end_example

After connecting a new monitor, it has to be activated with:
#+begin_src shell :results none
  xrandr --output DP-1 --auto
#+end_src

This leads to
1. Firing /FvwmEvent/ the event /monitor_enabled/
2. Execution of /RandRFunc/

Disconnecing a monitor leads to
1. Executing of /RandRFunc/
2. Firing FvwmEvent the event /monitor_disabled/

After a monitor has been disconnected, it has to be deactivated, by executing:
#+begin_src shell :results none
  xrandr --output DP-1 --off
#+end_src

*Note*: Deactivating a monitor does not fire any /FvwmEvent/ events, as long as it is still connected. The function /RandRFunc/ and the event /monitor_disabled/ only comes into effect when the monitor has been disconnected. 

Two functions are added:
1. Activate a monitor as primary monitor:
   #+begin_src conf-space
     DestroyFunc ActivateMonitor
     AddToFunc ActivateMonitor
      + I Exec xrandr --output $0 --auto --primary
   #+end_src

   The activated monitor is set as primary monitor, so desktop resolution and /FvwmPager/ can be adjusted, by restarting FVWM.

2. Deactivate a monitor and make the standard monitor the primary monitor again:
   #+begin_src conf-space
     DestroyFunc DeactivateMonitor
     AddToFunc DeactivateMonitor
      + I Exec xrandr --output $0 --off
      + I Exec xrandr --output eDP-1 --primary
   #+end_src

Both functions are configured to (de-)activate /DP-1/, if a monitor is connected:
#+begin_src conf-space
  ,*FvwmEvent: Cmd
  ,*FvwmEvent: monitor_disabled "DeactivateMonitor DP-1"
  ,*FvwmEvent: monitor_enabled "ActivateMonitor DP-1"
#+end_src

*Note*: After FVWM has been (re)started and a monitor is connected the first time, neither /RandRFunc/ is executed nor /FvwmEvent/ events are fired. Therefore /ActivateMonitor/ has to be executed manually once. After that, the automatic (de-)activation of /DP-1/ works.

* Initialization
Set a background image on initialization:
#+begin_src conf-space
  DestroyFunc InitFunction
  AddToFunc   InitFunction
  + I Exec exec fvwm3-root \
    ${FVWM_DATADIR}/default-config/images/background/bg3.png
#+end_src

Start the modules /FvwmPager/ and /FvwmEvent/, on startups and restarts, after FVWM has read its config:
#+begin_src conf-space
  DestroyFunc StartFunction
  AddToFunc   StartFunction
  + I Module FvwmPager
  + I Module FvwmEvent
#+end_src

* Fonts
Set the default font:
#+begin_src conf-space
  DefaultFont "xft:Sans:antialias=True:size=10"
#+end_src

* Keyboard bindings

** Invoke the root menu
Invoke the [[* Root menu][root menu]] with /Super_L+F1/
#+begin_src conf-space
  Key F1 A 4  PopUp MenuFvwmRoot
#+end_src

** Enable brightness control
After installing ~brightnessctl~ and ~brightness-udev~, use these keybindings to increase or decrease the screen brightnesss with the respecting keys:
#+begin_src conf-space
  Key XF86MonBrightnessDown A A Exec exec brightnessctl s 10%-
  Key XF86MonBrightnessUp   A A Exec exec brightnessctl s 10%+
#+end_src

** Enable audio controls
After installing ~pulseaudio-utils~, use the following keybindings for the respecting multimedia key:

(Un-)mute audio playback:
#+begin_src conf-space
  Key XF86AudioMute A A Exec exec pactl set-sink-mute \
      $(pactl get-default-sink) toggle
#+end_src

Raise and lower playback volume:
#+begin_src conf-space
  Key XF86AudioLowerVolume A A Exec exec pactl set-sink-volume \
      $(pactl get-default-sink) -10%
  Key XF86AudioRaiseVolume A A Exec exec pactl set-sink-volume \
      $(pactl get-default-sink) +10%
#+end_src

(Un-)mute the microphone:
#+begin_src conf-space
  Key XF86AudioMicMute A A Exec exec pactl set-source-mute \
      $(pactl get-default-source) toggle
#+end_src

** Page navigation
Page navigation is done with the Numpad arrow keys or /H/, /J/, /K/ and /L/ while pressing /Super_L/:
#+begin_src conf-space
  Key J	     A 4 GotoPage  0p  1p
  Key KP_Down  A 4 GotoPage  0p  1p
  Key H	     A 4 GotoPage -1p  0p
  Key KP_Left  A 4 GotoPage -1p  0p
  Key L	     A 4 GotoPage  1p  0p
  Key KP_Right A 4 GotoPage  1p  0p
  Key K        A 4 GotoPage  0p -1p
  Key KP_Up    A 4 GotoPage  0p -1p
#+end_src

** Window controls
Opens the [[* Menu for window operations][menu for window operations]] on the current window with /Super_L+O/:
#+begin_src conf-space
  Key O A 4 Menu MenuWindowOps
#+end_src

Opens the [[* Menu for sending windows to pages][menu for sending windows to pages]] on the current window with /Super_L+P/:
#+begin_src conf-space
  Key P A 4 Menu MenuWindowOps
#+end_src

Move the current window with /Super_L+M/:
#+begin_src conf-space
  Key M A 4 Move
#+end_src

Move the current window in an animated way in a give direction with /Super_L+Shift+<Arrow-Key>/ until it hits another window or a screen boundary:
#+begin_src conf-space
  Key Up A 4S AnimatedMove shuffle Up
  Key Down A 4S AnimatedMove shuffle Down
  Key Left A 4S AnimatedMove shuffle Left
  Key Right A 4S AnimatedMove shuffle Right
#+end_src

Resize the current window with /Super_L+G/:
#+begin_src conf-space
  Key G A 4 Resize
#+end_src

Iconifies or deiconifies the current window with /Super_L+Down/:
#+begin_src conf-space
  Key Down A 4 Iconify
#+end_src

Iconifies all iconifiable windows on the current page with /Super_L+D/:
#+begin_src conf-space
  Key D A 4 All (Iconifiable, CurrentPage) Iconify True
#+end_src

Maximized windows should also be raised, to have them not maximized behind other windows of the same layer:
#+begin_src conf-space
  DestroyFunc Maximize-and-Raise
  AddToFunc Maximize-and-Raise
  + I Maximize
  + I Raise
#+end_src

Maximizes or unmaximizes the current window with /Super_L+Up/:
#+begin_src conf-space
  Key Up A 4 Maximize-and-Raise
#+end_src

Raise the current window in its layer with /Super_L+R/:
#+begin_src conf-space
  Key R A 4 Raise
#+end_src

Stick or unstick the current window with /Super_L+G/:
#+begin_src conf-space
  Key S A 4 Stick
#+end_src



** Deactivate M-Tab for mc
Some programms, like Midnight Commander use the combination /M-Tab/. Passing synthetic events to ~xterm~ like it is described on the [[https://www.fvwm.org/Man/fvwm3commands/#_mouse_key_bindings][FVWM3 man page]] leads to further problems and is therefore not the ideal way.

Alternatively the combination /M-Tab/ is deactivated and remapped to /Super_L-Tab/. Furthermore the: 
#+begin_src conf-space
  Key Tab A M -
  Key Tab A 4 WindowList Root c c NoGeometry, SelectOnRelease Super_L
#+end_src

* Mouse bindings
Add buttons to window title for (un-)maximize and (de-)iconify windows:
#+begin_src conf-space
  Mouse 1 1 A Menu MenuWindowOps Delete
  Mouse 1 2 A Maximize-and-Raise
  Mouse 1 4 A Iconify
#+end_src

Deiconify iconified windows with a mouse click:
#+begin_src conf-space
  Mouse 1 I A Iconify False
#+end_src

* Menus

** Root menu
Definition of the root menu:
#+begin_src conf-space
  DestroyMenu MenuFvwmRoot
  AddToMenu   MenuFvwmRoot "Fvwm" Title
  + "$[gt.XDG &Menu]%icons/apps.png%"	Popup XDGMenu
  + "&Terminal%icons/terminal.png%"	Exec exec x-terminal-emulator
  + ""					Nop
  + "Fvwm&Console%icons/terminal.png%"	Module FvwmConsole -terminal \
    x-terminal-emulator
  + "$[gt.Cop&y Config]%icons/conf.png%"	FvwmScript \
    FvwmScript-ConfirmCopyConfig
  + ""					Nop
  + "&Activate DP-1%icons/run_arrow.png%" ActivateMonitor DP-1
  + "&DeActivate DP-1"			DeActivateMonitor DP-1
  + ""					Nop
  + "$[gt.Re&fresh]%icons/refresh.png%"	Refresh
  + "$[gt.&Restart]%icons/restart.png%"	Restart
  + "$[gt.&Quit]%icons/quit.png%"		Module FvwmScript \
    FvwmScript-ConfirmQuit
  + "$[gt.&Hibernate]"			Exec exec systemctl hibernate
#+end_src

*** /freedesktop.org/ menu
Generate the /freedesktop.org/ menu with mini icons, which is used in the root menu:
#+begin_src conf-space
  PipeRead "fvwm3-menu-desktop -e --enable-mini-icons"
#+end_src

** Menu for window operations
Adding a menu with several window operations:
#+begin_src conf-space
  DestroyMenu MenuWindowOps
  AddToMenu   MenuWindowOps
   + "$[gt.&Identify]%icons/info.png%"		  Module FvwmIdent
   + ""						  Nop
   + "$[gt.&Move]%icons/win/move.png%"		  Move
   + "$[gt.Send To &Page]%icons/win/sendto.png%"	  Popup MenuSendToPage
   + ""						  Nop
   + "$[gt.Re&size]%icons/win/resize.png%"	  Resize
   + "$[gt.(De)Iconify]%icons/win/iconify.png%"	  Iconify
   + "$[gt.(Un)Maximize]%icons/win/max.png%"	  Maximize-and-Raise
   + ""						  Nop
   + "$[gt.&Raise]%icons/win/raise.png%"		  Raise
   + "$[gt.&Lower]%icons/win/lower.png%"		  Lower
   + ""						  Nop
   + "$[gt.Stays On &Top]%icons/win/top.png%"	  Pick (CirculateHit) Layer 0 6
   + "$[gt.Stays &Put]%icons/win/stays.png%"	  Pick (CirculateHit) Layer 0 4
   + "$[gt.Stays On &Bottom]%icons/win/bottom.png%" Pick (CirculateHit) Layer 0 2
   + ""						  Nop
   + "$[gt.(Un)&Sticky]%icons/win/sticky.png%"	  Stick
   + "$[gt.(Un)S&hade]%icons/win/shade.png%"	  WindowShade
   + "$[gt.Re&fresh Window]%icons/refresh.png%"	  RefreshWindow
   + ""						  Nop
   + "$[gt.&Close]%icons/win/close.png%"		  Close
   + "$[gt.&Delete]%icons/win/done.png%"		  Delete
   + "$[gt.&Destroy]%icons/win/destroy.png%"	  Destroy
#+end_src

*** Menu for sending windows to pages
The window operation menu above uses a submenu for sending windows to a specific page:
#+begin_src conf-space
  DestroyMenu MenuSendToPage
  AddToMenu   MenuSendToPage
   + "$[gt.Page] &1 (0,0)" MoveToPage 0 0
   + "$[gt.Page] &2 (1,0)" MoveToPage 1 0
   + "$[gt.Page] &3 (2,0)" MoveToPage 2 0
   + "$[gt.Page] &4 (0,1)" MoveToPage 0 1
   + "$[gt.Page] &5 (1,1)" MoveToPage 1 1
   + "$[gt.Page] &6 (2,1)" MoveToPage 2 1
   + "$[gt.Page] &7 (0,2)" MoveToPage 0 2
   + "$[gt.Page] &8 (1,2)" MoveToPage 1 2
   + "$[gt.Page] &9 (2,2)" MoveToPage 2 2
#+end_src

** Menu Styles
Menus have a pseudo transparent background. They have no 3D borders and no 3D hilighting. The foreground and background of the selected menu item is hilighted using the /ActiveColorset/. The title is not hilighted. Submenus are shifted in an animated way. The triangles for submenus are solid and use the Foreground colour:
#+begin_src conf-space
  MenuStyle * Translucent 75
  MenuStyle * Borderwidth 0, Hilight3dOff
  MenuStyle * ActiveFore, HilightBack
  MenuStyle * !HilightTitleBack
  MenuStyle * Animation
  MenuStyle * TrianglesSolid, TrianglesUseFore
#+end_src

Menus have no side picture, so no definition for this is necessary. The hilighted area of a menu item spans around the whole item. After a 5 pixel space either the mini icon, if defined, or the label is shown. Between the label and the minicon is a 5 pixel space. If the item leads to a submenu the triangle is shown with a space of 5 pixels to the label. The item ends with a 5 pixel space either after the label or the submenu triangle:
#+begin_src conf-space
  MenuStyle * ItemFormat "%.5|%5.i%5.5l%.5>%5.|"
#+end_src

** Focus policy
Windows should keep the focus until the mouse pointer hits another window and not the root window:
#+begin_src conf-space
  Style * SloppyFocus
#+end_src

*** JDownloader
/JDownloader/ sets the WM hint property ~input=false~, but does not take the focus, if it is selected via /WindowList/ from another page. To fix this, /JDownloader/ windows are given the lenient focus style:
#+begin_src conf-space
  Style JDownloader* FPLenient
#+end_src

** Icons
Create an icon box from top left to bottom right of the screen. The grid has a size of 80x100 to hold icons of the size 64x64 and the current icon size of an active icon of /xterm/:
#+begin_src conf-space
  Style * IconSize 64 64
  Style * IconBox 0 0 -0 -0,\
	IconGrid 90 100,\
	IconFill top left
#+end_src

Setting the icons and styles for specific applications:
#+begin_src conf-space
  Style Emacs IconOverride, Icon /usr/share/icons/hicolor/scalable/apps/emacs.svg
#+end_src

** Title buttons
Use style /MwmButtons/ to have maximized windows display a different button as button 2:
#+begin_src conf-space
  Style * MwmButtons
#+end_src

** Borders
Do not show handles and reduce set the border width to 2 pixels:
#+begin_src conf-space
  Style * !Handles,\
	BorderWidth 2
#+end_src

** Resizing
Resize windows with visible content:
#+begin_src conf-space
  Style * ResizeOpaque
#+end_src

#+begin_src conf-space
#+end_src

#+end_src

** Title bar

*** No Ttitle for Steam
Windows with class /steam/ do not need a title bar because they have their own:
#+begin_src conf-space
  Style steam !Title
#+end_src

* FvwmPager

** Style
The pager is styled as follows:
1. Not having titles, borders or handles
2. Stickiness accross all pages and desks
3. Not appearing in the *WindowList*
4. Not being iconifiable, to prevent being iconified e.g by pressing /Super_L+D/
5. Make the position fixed, to prevent relocation
#+begin_src conf-space
  Style FvwmPager !Title, !Borders, !Handles,\
	Sticky,\
	WindowListSkip,\
	!Iconifiable,\
	FixedPosition
#+end_src

** Configuration
The pager is configured as follows
1. Place the pager into the top right corner
2. Do not show desktop labels
3. Show mini icons of windows
4. Ballons are shown for un-iconified pager
5. Do not show windows using the style /WindowListSkip/
#+begin_src conf-space
  DestroyModuleConfig FvwmPager:*
  ,*FvwmPager: Geometry -0+0
  ,*FvwmPager: Font None
  ,*FvwmPager: MiniIcons
  ,*FvwmPager: Balloons Pager
  ,*FvwmPager: UseSkipList
#+end_src

